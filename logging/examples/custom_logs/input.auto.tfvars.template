# Copyright (c) 2023 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

#--------------------------------------------------------------------------------------------------------------------------------------
# 1. Rename this file to <project-name>.auto.tfvars, where <project-name> is a name of your choice.
# 2. Provide values for "Tenancy Connectivity Variables".
# 3. Replace <REPLACE-BY-COMPARTMENT-OCID> placeholders with appropriate compartment OCID.
# 4. Replace <REPLACE-BY-DYNAMIC-GROUP-OCID> placeholder with appropriate dynamic group OCID.
# 5. Replace <REPLACE-BY-PATH-FROM-INSTANCE> placeholder with path value from the instance from where logs are to be collected.
# 6. Replace <REPLACE-BY-PARSER-TYPE> placeholder with values from NONE, SYSLOG, JSON, CSV, REGEX, APACHE_ERROR, MULTILINE, APACHE2,AUDITD, JSON, CRI
#--------------------------------------------------------------------------------------------------------------------------------------

#---------------------------------------
# Tenancy Connectivity Variables
#---------------------------------------

tenancy_ocid         = "<REPLACE-BY-TENANCY-OCID>"             # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "Tenancy: <your tenancy name>").
user_ocid            = "<REPLACE-BY-USER-OCID>"                # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "My profile").
fingerprint          = "<REPLACE-BY-USER-FINGERPRINT>"      # The fingerprint can be gathered from your user account. In the "My profile page, click "API keys" on the menu in left hand side).
private_key_path     = "<REPLACE-BY-PRIVATE-KEY-PATH>"  # This is the full path on your local system to the API signing private key.
private_key_password = ""                           # This is the password that protects the private key, if any.
region               = "<REPLACE-BY-YOUR-TENANCY-REGION>"      # This is your region, where all other events are created. It can be the same as home_region.

#---------------------------------------
# Input variable
#---------------------------------------

logging_configuration = {

  default_compartment_id = "<REPLACE-BY-COMPARTMENT-OCID>"
  
  log_groups = {

        CUSTOM-LOG-GROUP = {
      name = "custom-log-group"
    }


  }

  custom_logs = {

  CUSTOM-LOGS-LINUX = {
  compartment_id = "<REPLACE-BY-COMPARTMENT-OCID>"
  name = "custom-logs-linux"
  log_group_id = "CUSTOM-LOG-GROUP"
  dynamic_groups = ["<REPLACE-BY-DYNAMIC-GROUP-OCIDs>"]
  path = ["<REPLACE-BY-PATHS-FROM-INSTANCE>"]
  is_enabled = "true"
  parser = "<REPLACE-BY-PARSER-TYPE>"

  }

  CUSTOM-SYSLOGS-LINUX = {
  compartment_id = "<REPLACE-BY-COMPARTMENT-OCID>"
  name = "custom-syslogs-linux"
  log_group_id = "CUSTOM-LOG-GROUP"
  dynamic_groups = ["<REPLACE-BY-LIST-OF-DYNAMIC-GROUP-OCIDs>"]
  path = ["<REPLACE-BY-LIST-OF-PATHS-TO-GET-LOGS-FROM>"]
  is_enabled = "true"
  parser = "<REPLACE-BY-PARSER-TYPE>"

  }

  CUSTOM-APACHE-ERROR-LINUX = {
  compartment_id = "<REPLACE-BY-COMPARTMENT-OCID>"
  name = "custom-apache-errorlogs-linux"
  log_group_id = "CUSTOM-LOG-GROUP"
  dynamic_groups = ["<REPLACE-BY-LIST-OF-DYNAMIC-GROUP-OCIDs>"]
  path = ["<REPLACE-BY-LIST-OF-PATHS-TO-GET-LOGS-FROM>"]
  is_enabled = "true"
  parser = "<REPLACE-BY-PARSER-TYPE>"

  }

}

}



